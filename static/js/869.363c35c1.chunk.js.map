{"version":3,"file":"static/js/869.363c35c1.chunk.js","mappings":"qNAEe,SAASA,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAYA,OAHAC,EAAAA,EAAAA,YAAU,WACRD,EAAgBL,EAAWE,EAC5B,GAAE,CAACF,EAAUE,KAEZ,4BACE,qCACA,iCACE,oBAEEK,KAAK,SACLC,QAjBY,WAClBP,GAAY,SAAAQ,GAAS,OAAIA,EAAY,CAAhB,GACtB,EAYK,uEAKqBT,EALrB,0BAOA,0BAAOI,KACP,oBAEEG,KAAK,SACLC,QAtBY,WAClBL,GAAY,SAAAM,GAAS,OAAIA,EAAY,CAAhB,GACtB,EAiBK,uEAKqBP,EALrB,8BAUP,C","sources":["components/HooksExamples/Counter.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function Counter() {\n  const [counterA, setCounterA] = useState(0);\n  const [counterB, setCounterB] = useState(0);\n  const [totalCounter, setTotalCounter] = useState(0);\n\n  const addCounterA = () => {\n    setCounterA(prevState => prevState + 1);\n  };\n  const addCounterB = () => {\n    setCounterB(prevState => prevState + 1);\n  };\n\n  useEffect(() => {\n    setTotalCounter(counterA + counterB);\n  }, [counterA, counterB]);\n  return (\n    <div>\n      <h2>Counter</h2>\n      <>\n        <button\n          //   className={styles.btn}\n          type=\"button\"\n          onClick={addCounterA}\n        >\n          Кликнули counterA {counterA} раз\n        </button>\n        <span>{totalCounter}</span>\n        <button\n          //   className={styles.btn}\n          type=\"button\"\n          onClick={addCounterB}\n        >\n          Кликнули counterB {counterB} раз\n        </button>\n      </>\n    </div>\n  );\n}\n\n// class OldCounter extends Component {\n//   state = {\n//     counterA: 0,\n//     counterB: 0,\n//   };\n\n//   handleCounterAIncrement = () => {\n//     this.setState(({ counterA }) => ({ counterA: counterA + 1 }));\n//   };\n\n//   handleCounterBIncrement = () => {\n//     this.setState(({ counterB }) => ({ counterB: counterB + 1 }));\n//   };\n\n// componentDidMount() {\n//   const { counterA, counterB } = this.state;\n//   const totalClicks = counterA + counterB;\n\n//   document.title = `Всего кликнули ${totalClicks} раз`;\n// }\n\n// componentDidUpdate(prevProps, prevState) {\n//   const { counterA, counterB } = this.state;\n\n//   if (prevState.counterA !== counterA || prevState.counterB !== counterB) {\n//     const totalClicks = counterA + counterB;\n\n//     document.title = `Всего кликнули ${totalClicks} раз`;\n//   }\n// }\n\n//   render() {\n//     return (\n//       <>\n//         <button\n//           className={styles.btn}\n//           type=\"button\"\n//           onClick={this.handleCounterAIncrement}\n//         >\n//           Кликнули counterA {this.state.counterA} раз\n//         </button>\n\n//         <button\n//           className={styles.btn}\n//           type=\"button\"\n//           onClick={this.handleCounterBIncrement}\n//         >\n//           Кликнули counterB {this.state.counterB} раз\n//         </button>\n//       </>\n//     );\n//   }\n// }\n"],"names":["Counter","useState","counterA","setCounterA","counterB","setCounterB","totalCounter","setTotalCounter","useEffect","type","onClick","prevState"],"sourceRoot":""}