{"version":3,"file":"static/js/32.eafe04f8.chunk.js","mappings":"mPAKMA,EAAYC,EAAAA,GAAAA,EAAH,uCAITC,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACL,EAAD,UAAYK,GAAhB,GAGpB,EAEKC,EAAW,CAAC,UAAW,WAAY,OAAQ,WAE3CC,EAAmBC,EAAAA,GAAW,CAClCC,QAASD,EAAAA,KAAaE,SAAS,2BAA2BC,MAAML,GAChEH,KAAMK,EAAAA,KAAaE,WACnBE,MAAOJ,EAAAA,KAAaI,QAAQF,WAC5BG,MAAOL,EAAAA,KAAaE,WACpBI,OAAQN,EAAAA,KAAaE,WACrBK,OAAQP,EAAAA,KAAaQ,IAAI,GAAGC,IAAI,IAAIP,WACpCQ,KAAMV,EAAAA,KAAWW,SAAQ,kBAAM,IAAIC,IAAV,IACzBC,eAAgBb,EAAAA,KAAcW,SAAQ,KAGlCG,EAAgB,CACpBnB,KAAM,GACNS,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRG,KAAM,IAAIE,KACVC,gBAAgB,EAChBZ,QAAS,IAGI,SAASc,IAKtB,OACE,4BACE,oCACA,SAAC,KAAD,CACED,cAAeA,EACff,iBAAkBA,EAClBiB,SAVe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BC,QAAQC,IAAIH,GACZC,GACD,EAIG,UAKE,UAAC,KAAD,CAAMG,aAAa,MAAnB,WACE,4BACE,kBAAOC,QAAQ,OAAf,wBACA,4BACE,SAAC,KAAD,CAAO3B,KAAK,OAAO4B,KAAK,OAAOC,YAAY,eAC3C,SAAC9B,EAAD,CAAWC,KAAK,gBAGpB,4BACE,kBAAO2B,QAAQ,QAAf,4BACA,4BACE,SAAC,KAAD,CAAO3B,KAAK,QAAQ4B,KAAK,OAAOC,YAAY,mBAC5C,SAAC9B,EAAD,CAAWC,KAAK,iBAGpB,4BACE,kBAAO2B,QAAQ,UAAf,sBACA,4BACE,UAAC,KAAD,CAAO3B,KAAK,UAAU8B,GAAG,SAAzB,WACE,mBAAQC,MAAM,GAAd,8BACC5B,EAAS6B,KAAI,SAAC1B,EAAS2B,GAAV,OACZ,mBAAQF,MAAOzB,EAAf,SACGA,GAD0B2B,EADjB,QAMhB,SAAClC,EAAD,CAAWC,KAAK,mBAGpB,4BACE,kBAAO2B,QAAQ,QAAf,oBACA,4BACE,SAAC,KAAD,CAAO3B,KAAK,QAAQ4B,KAAK,OAAOC,YAAY,WAC5C,SAAC9B,EAAD,CAAWC,KAAK,iBAGpB,4BACE,kBAAO2B,QAAQ,SAAf,qBACA,4BACE,SAAC,KAAD,CAAO3B,KAAK,SAAS8B,GAAG,WAAWD,YAAY,YAC/C,SAAC9B,EAAD,CAAWC,KAAK,kBAGpB,4BACE,kBAAO2B,QAAQ,SAAf,qBACA,4BACE,SAAC,KAAD,CAAO3B,KAAK,SAAS4B,KAAK,SAASC,YAAY,YAC/C,SAAC9B,EAAD,CAAWC,KAAK,kBAGpB,0BACE,0BACE,mBAAO2B,QAAQ,iBAAf,WACE,SAAC,KAAD,CAAO3B,KAAK,iBAAiB4B,KAAK,aADpC,0BAMJ,mBAAQA,KAAK,SAAb,2BAKT,C","sources":["components/HooksExamples/Formik.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\n\nconst ErrorText = styled.p`\n  color: red;\n`;\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst products = ['Sweater', 'Keyboard', 'Sofa', 'Freezer'];\n\nconst validationSchema = Yup.object({\n  product: Yup.string().required('Please select a product').oneOf(products),\n  name: Yup.string().required(),\n  email: Yup.string().email().required(),\n  title: Yup.string().required(),\n  review: Yup.string().required(),\n  rating: Yup.number().min(1).max(10).required(),\n  date: Yup.date().default(() => new Date()),\n  wouldRecommend: Yup.boolean().default(false),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  title: '',\n  review: '',\n  rating: '',\n  date: new Date(),\n  wouldRecommend: false,\n  product: '',\n};\n\nexport default function FormikProduct() {\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    resetForm();\n  };\n  return (\n    <div>\n      <h2>Formik</h2>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <div>\n            <label htmlFor=\"name\">Full name</label>\n            <div>\n              <Field name=\"name\" type=\"text\" placeholder=\"Full name\" />\n              <FormError name=\"name\" />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email address</label>\n            <div>\n              <Field name=\"email\" type=\"text\" placeholder=\"Email address\" />\n              <FormError name=\"email\" />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"product\">Product</label>\n            <div>\n              <Field name=\"product\" as=\"select\">\n                <option value=\"\">Select a product</option>\n                {products.map((product, idx) => (\n                  <option value={product} key={idx}>\n                    {product}\n                  </option>\n                ))}\n              </Field>\n              <FormError name=\"product\" />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"title\">Title</label>\n            <div>\n              <Field name=\"title\" type=\"text\" placeholder=\"Title\" />\n              <FormError name=\"title\" />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"review\">Review</label>\n            <div>\n              <Field name=\"review\" as=\"textarea\" placeholder=\"Review\" />\n              <FormError name=\"review\" />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"rating\">Rating</label>\n            <div>\n              <Field name=\"rating\" type=\"number\" placeholder=\"Rating\" />\n              <FormError name=\"rating\" />\n            </div>\n          </div>\n          <div>\n            <div>\n              <label htmlFor=\"wouldRecommend\">\n                <Field name=\"wouldRecommend\" type=\"checkbox\" />\n                Would recommend\n              </label>\n            </div>\n          </div>\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\n// https://github.com/luxplanjay/react-41/blob/04-forms/src/components/ProductReviewForm/ProductReviewForm.jsx\n"],"names":["ErrorText","styled","FormError","name","render","message","products","validationSchema","Yup","product","required","oneOf","email","title","review","rating","min","max","date","default","Date","wouldRecommend","initialValues","FormikProduct","onSubmit","values","resetForm","console","log","autoComplete","htmlFor","type","placeholder","as","value","map","idx"],"sourceRoot":""}