{"version":3,"file":"static/js/437.3f0342b4.chunk.js","mappings":"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","sources":["components/FormikFairbase/Form.styled.js","components/FormikFairbase/MyInput.jsx","components/FormikFairbase/MySelect.jsx","components/FormikFairbase/MyCheckbox.jsx","components/FormikFairbase/SignupForm.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormikPageWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 85vw;\n  height: 100%;\n  background-color: #fafafa;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const WrapNavSign = styled.nav`\n  /* position: fixed; */\n  top: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #757575;\n  gap: 40px;\n  width: 100%;\n  height: 60px;\n  /* gap: 40px; */\n  margin: 0;\n  padding: 8px 0;\n  .navigate {\n    font-family: 'Prompt', sans-serif;\n    font-size: 24px;\n    font-weight: 700;\n    margin: 0;\n    color: #212121;\n    text-decoration: none;\n    transition: all 0.3s;\n    cursor: pointer;\n    &.active {\n      color: white;\n    }\n  }\n`;\n\nexport const WrapFormUp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin: 0;\n`;\n// *******  All form **************\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 20px;\n`;\n// ******** Auth form **************\nexport const AuthForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: max-content;\n  margin: 0;\n  padding: 0;\n`;\nexport const AuthTitle = styled.label`\n  font-size: 20px;\n  text-align: center;\n  font-weight: 700;\n  color: #616161;\n  padding: 8px;\n`;\nexport const InputBox = styled.div`\n  position: relative;\n  padding: 8px 0 16px 0;\n  margin: 0;\n  /* margin: 8px auto 8px auto; */\n`;\nexport const StyledField = styled(Field)`\n  /* position: relative; */\n  width: 300px;\n  height: 24px;\n  font-size: 16px;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 8px;\n  margin: 0;\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    transform: translateY(-32px);\n    font-size: 16px;\n    text-align: center;\n    color: #616161;\n    outline: #616161;\n  }\n`;\nexport const Label = styled.label`\n  position: absolute;\n  top: 44%;\n  left: 28px;\n  /* transform: translateY(-50%); */\n  transform: translateY(-44%);\n  font-size: 16px;\n  text-align: center;\n  color: #616161;\n  background-color: white;\n  pointer-events: none;\n  transition: all 0.2s ease-in-out;\n  padding: 0;\n  margin: 0;\n`;\n// ************ Select form ***********\n\nexport const SelectFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: 112px;\n  margin: 0;\n`;\nexport const SelectTitle = styled.label`\n  font-size: 20px;\n  text-align: center;\n  font-weight: 700;\n  color: #616161;\n  padding: 8px;\n`;\nexport const StyledSelect = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 316px;\n  height: 40px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #616161;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 8px;\n  margin: 0;\n  .option {\n    font-size: 16px;\n    color: #616161;\n    border-radius: 8px;\n    outline: #616161;\n  }\n  //\n`;\n// *********** Textarea form *************\nexport const AreaFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: 192px;\n  margin: 0;\n`;\nexport const AreatTitle = styled.label`\n  font-size: 20px;\n  text-align: center;\n  font-weight: 700;\n  color: #616161;\n  padding: 8px;\n`;\nexport const StyledTextarea = styled(Field)`\n  width: 340px;\n  height: 100px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #616161;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 8px;\n  margin: 0;\n`;\n// ************  Rating ********************\nexport const RatingFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 240px;\n  height: 100px;\n  padding: 0;\n  margin: 0;\n`;\nexport const RatingTitle = styled.label`\n  font-size: 20px;\n  text-align: center;\n  font-weight: 700;\n  color: #616161;\n  padding: 8px;\n`;\nexport const StyledRating = styled(Field)`\n  width: 60px;\n  height: 28px;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  color: #616161;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 0;\n  margin: 0;\n`;\n// ************  Checkbox ********************\nexport const CheckboxFormWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: 60px;\n  margin: 0;\n  padding: 0;\n`;\nexport const CheckboxLabel = styled.label`\n  display: flex;\n  justify-content: ctnter;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  color: #616161;\n`;\nexport const StyledCheckbox = styled(Field)`\n  width: 20px;\n  height: 20px;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 0;\n  margin: 0;\n`;\n// ********** Button- submit ***************\nexport const BtnForm = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 16px;\n  font-weight: 700;\n  background-color: #bdbdbd;\n  border-radius: 16px;\n  border: 1px solid #bdbdbd;\n  outline: #bdbdbd;\n  width: 400px;\n  height: 48px;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: #757575;\n  }\n`;\n// ********** Erorr ************************\n\nexport const ErrorText = styled.div`\n  display: flex;\n  justify-content: centr;\n  width: 300px;\n  font-size: 16px;\n  color: #ff1744;\n  padding: 0;\n  margin: 0;\n`;\n// ********************************\nexport const MyStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: 112px;\n  margin: 0;\n  .form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    padding: 20px;\n  }\n  .input {\n    width: 300px;\n    height: 24px;\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .label {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 8px;\n  }\n  .select {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 316px;\n    height: 40px;\n    font-size: 16px;\n    font-weight: 500;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .option {\n    font-size: 16px;\n    color: #616161;\n    border-radius: 8px;\n    outline: #616161;\n  }\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-size: 16px;\n    font-weight: 700;\n    background-color: #bdbdbd;\n    border-radius: 16px;\n    border: 1px solid #bdbdbd;\n    outline: #bdbdbd;\n    width: 400px;\n    height: 48px;\n    margin: 0;\n    padding: 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: #757575;\n    }\n  }\n`;\n","import { useField } from 'formik';\nimport React from 'react';\n\nexport default function MyInput({ label, ...props }) {\n  const [field, meta] = useField(props);\n  return (\n    <div>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input className=\"input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useField } from 'formik';\n// import FormError from './FormError';\n\n// const jobType = [\n//   'Design UI/UX',\n//   'Fullstack',\n//   'Project Manager',\n//   'Data Analyst',\n//   'Sysadmin',\n// ];\n\nexport default function MySelect({ label, ...props }) {\n  const [field, meta] = useField(props);\n\n  return (\n    <div>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <select {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </div>\n  );\n}\n\n// {/* <MySelect>\n//   <label htmlFor=\"jobType\" className=\"label\">\n//     Job Type\n//   </label>\n//   <select name=\"jobType\" as=\"select\" className=\"select\">\n//     <option value=\"\" className=\"option\">\n//       Select a job type\n//     </option>\n//     {jobType.map((type, idx) => (\n//       <option value={type} key={idx} className=\"option\">\n//         {type}\n//       </option>\n//     ))}\n//   </select>\n//   <FormError name=\"jobType\" />\n// </MySelect>; */}\n","import { useField } from 'formik';\nimport React from 'react';\n// import FormError from './FormError';\n\nexport default function MyCheckbox({ children, ...props }) {\n  const [field, meta] = useField({ ...props, type: 'checkbox' });\n  return (\n    <div>\n      <label className=\"checkbox-input\">\n        <input type=\"checkbox\" {...field} {...props} />\n        {children}\n      </label>\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { MyStyled } from './Form.styled';\nimport MyInput from './MyInput';\nimport MySelect from './MySelect';\nimport MyCheckbox from './MyCheckbox';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst jobType = [\n  'Design UI/UX',\n  'Fullstack',\n  'Project Manager',\n  'Data Analyst',\n  'Sysadmin',\n];\n\nconst validationSchema = Yup.object({\n  name: Yup.string().min(2, 'Too Short!').max(15, 'Too Long!').required(),\n  email: Yup.string().email('Invalid email').required(),\n  // password: Yup.string().required(),\n  // review: Yup.string().required(),\n  // rating: Yup.number().required(),\n  agreement: Yup.boolean().required().default(false),\n  jobType: Yup.string().oneOf(jobType).required('Please select a job type'),\n  date: Yup.date().default(() => new Date()),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  // password: '',\n  jobType: '',\n  // review: '',\n  // rating: '',\n  agreement: false,\n  date: new Date(),\n};\n\nexport default function SignupForm({ onRegistration }) {\n  // const handleSubmit = (values, { resetForm }) => {\n  //   const email = values.email;\n  //   const password = values.password;\n  //   console.log(email);\n  //   console.log(password);\n  //   onRegistration(email, password);\n  //   console.log(values);\n  //   resetForm();\n  // };\n  return (\n    <MyStyled>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        // onSubmit={handleSubmit}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            console.log(initialValues);\n\n            setSubmitting(true);\n            resetForm();\n          }, 400);\n        }}\n      >\n        {props => (\n          <Form>\n            <MyInput label=\"Name\" name=\"name\" type=\"text\" />\n            <MyInput label=\"Email\" name=\"email\" type=\"email\" />\n            <MySelect label=\"Job Type\" name=\"jobType\">\n              <option key={nanoid()} value=\"\" className=\"option\">\n                Select a job type\n              </option>\n              <option key={nanoid()} value=\"Design UI/UX\" className=\"option\">\n                Design UI/UX\n              </option>\n              <option key={nanoid()} value=\"Fullstack\" className=\"option\">\n                Fullstack\n              </option>\n              <option key={nanoid()} value=\"Project Manager\" className=\"option\">\n                Project Manager\n              </option>\n              <option key={nanoid()} value=\"Data Analyst\" className=\"option\">\n                Data Analyst\n              </option>\n              <option key={nanoid()} value=\"'Sysadmin'\" className=\"option\">\n                'Sysadmin'\n              </option>\n            </MySelect>\n            <MyCheckbox label=\"Agreement\" name=\"agreement\" type=\"checkbox\">\n              I accept the terms and conditions\n            </MyCheckbox>\n            <button type=\"submit\" className=\"button\">\n              {props.isSubmitting ? 'loading...' : 'Submit'}\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </MyStyled>\n  );\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["FormikPageWrap","styled","WrapNavSign","WrapFormUp","StyledForm","Form","AuthForm","AuthTitle","InputBox","StyledField","Field","Label","SelectFormWrap","SelectTitle","StyledSelect","AreaFormWrap","AreatTitle","StyledTextarea","RatingFormWrap","RatingTitle","StyledRating","CheckboxFormWrap","CheckboxLabel","StyledCheckbox","BtnForm","ErrorText","MyStyled","MyInput","label","props","useField","field","meta","htmlFor","id","name","className","touched","error","MySelect","MyCheckbox","children","type","validationSchema","Yup","min","max","required","email","agreement","default","jobType","oneOf","date","Date","initialValues","SignupForm","onRegistration","onSubmit","values","setSubmitting","resetForm","setTimeout","console","log","value","nanoid","isSubmitting","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}