{"version":3,"file":"static/js/916.79aba767.chunk.js","mappings":"mOAEaA,EAAaC,EAAAA,GAAAA,IAAH,2LAUVC,EAAQD,EAAAA,GAAAA,IAAH,yG,SCTH,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,0BACE,UAACJ,EAAD,YACE,SAACE,EAAD,kCACA,mBAAQG,QAASD,EAAjB,uBAIP,CCVc,SAASE,EAAgBC,EAAKC,GAC3C,OAA0BC,EAAAA,EAAAA,WAAS,WAAO,IAAD,EACvC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,WAA9C,QAAuDC,CACxD,IAFD,eAAOO,EAAP,KAAcC,EAAd,KAQA,OAJAC,EAAAA,EAAAA,YAAU,WACRL,OAAOC,aAAaK,QAAQX,EAAKG,KAAKS,UAAUJ,GACjD,GAAE,CAACR,EAAKQ,IAEF,CAACA,EAAOC,EAChB,C,cCNc,SAASI,IAGtB,MAA0Bd,EAAgB,QAAS,IAAnD,eAAOe,EAAP,KAAcC,EAAd,KACA,EAAgChB,EAAgB,WAAY,IAA5D,eAAOiB,EAAP,KAAiBC,EAAjB,KACA,GAAkCf,EAAAA,EAAAA,WAAS,GAA3C,eAAOgB,EAAP,KAAkBC,EAAlB,KAEMC,EAAe,SAAAC,GACnBA,EAAMC,iBACN,MAAwBD,EAAME,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHT,EAASU,GACT,MAEF,IAAK,WACHR,EAAYQ,GACZ,MAEF,QACE,OAGL,EAED,OACE,4BACE,kCACA,kBAAMC,aAAa,MAAnB,WACE,8BACE,8DACA,kBACEC,KAAK,QACLH,KAAK,QACLI,SAAUR,EACVK,MAAOX,QAIX,8BACE,oEACA,kBACEa,KAAK,WACLH,KAAK,WACLI,SAAUR,EACVK,MAAOT,QAIX,mBAAQW,KAAK,SAAb,8HAEF,mBAAQ7B,QAAS,kBAAMqB,GAAa,EAAnB,EAAjB,uCAGCD,IACCW,EAAAA,EAAAA,eACE,SAACjC,EAAD,CAAcC,QAAS,kBAAMsB,GAAa,EAAnB,IACvBW,SAASC,QAIlB,C","sources":["components/Modal/Modal.styled.js","components/Modal/ModalContent.jsx","hooks/useLocalStorage.js","components/HooksExamples/Form.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const ModalrWrap = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  /* z-index: 90; */\n  width: 100%;\n  height: 100%;\n  background-color: rgba(46, 47, 66, 0.4);\n`;\nexport const PopUp = styled.div`\n  display: flex;\n  width: 200px;\n  height: 200px;\n  background-color: white;\n`;\n","import React from 'react';\nimport { ModalrWrap, PopUp } from './Modal.styled';\n\nexport default function ModalContent({ onClose }) {\n  return (\n    <div>\n      <ModalrWrap>\n        <PopUp>I'm a modal dialog</PopUp>\n        <button onClick={onClose}>Close</button>\n      </ModalrWrap>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import ModalContent from 'components/Modal/ModalContent';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\n// import { useLocalStorage } from './hooks/useLocalStorage';\n\nexport default function Form() {\n  // Цей стейт буде викликаний один раз під час першого рендеру useEffect\n\n  const [email, setEmail] = useLocalStorage('email', '');\n  const [password, setPassword] = useLocalStorage('password', '');\n  const [showModal, setShowModal] = useState(false);\n\n  const handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n    // reset();\n  };\n\n  return (\n    <div>\n      <h2>Form</h2>\n      <form autoComplete=\"off\">\n        <label>\n          <span>Почта</span>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            value={email}\n          />\n        </label>\n\n        <label>\n          <span>Пароль</span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            value={password}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n      <button onClick={() => setShowModal(true)}>\n        Show modal using a portal\n      </button>\n      {showModal &&\n        createPortal(\n          <ModalContent onClose={() => setShowModal(false)} />,\n          document.body\n        )}\n    </div>\n  );\n}\n"],"names":["ModalrWrap","styled","PopUp","ModalContent","onClose","onClick","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","Form","email","setEmail","password","setPassword","showModal","setShowModal","handleChange","event","preventDefault","target","name","value","autoComplete","type","onChange","createPortal","document","body"],"sourceRoot":""}