{"version":3,"file":"static/js/281.95f83412.chunk.js","mappings":"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","sources":["components/FormikFairbase/Form.styled.js","components/FormikFairbase/FormError.jsx","components/FormikFairbase/FormikSignUp.jsx","components/FormikFairbase/SignUp.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormikPageWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 85vw;\n  height: 100%;\n  background-color: #fafafa;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const WrapNavSign = styled.nav`\n  /* position: fixed; */\n  top: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #757575;\n  gap: 40px;\n  width: 100%;\n  height: 60px;\n  /* gap: 40px; */\n  margin: 0;\n  padding: 8px 0;\n  .navigate {\n    font-family: 'Prompt', sans-serif;\n    font-size: 24px;\n    font-weight: 700;\n    margin: 0;\n    color: #212121;\n    text-decoration: none;\n    transition: all 0.3s;\n    cursor: pointer;\n    &.active {\n      color: white;\n    }\n  }\n`;\n\nexport const WrapFormUp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin: 0;\n`;\n// *******  All form **************\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 20px;\n`;\n// ******** Auth form **************\nexport const AuthForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: max-content;\n  margin: 0;\n  padding: 0;\n`;\nexport const AuthTitle = styled.label`\n  font-size: 20px;\n  text-align: center;\n  font-weight: 700;\n  color: #616161;\n  padding: 8px;\n`;\nexport const InputBox = styled.div`\n  position: relative;\n  padding: 8px 0 16px 0;\n  margin: 0;\n  /* margin: 8px auto 8px auto; */\n`;\nexport const StyledField = styled(Field)`\n  /* position: relative; */\n  width: 300px;\n  height: 24px;\n  font-size: 16px;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 8px;\n  margin: 0;\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    transform: translateY(-32px);\n    font-size: 16px;\n    text-align: center;\n    color: #616161;\n    outline: #616161;\n  }\n`;\nexport const Label = styled.label`\n  position: absolute;\n  top: 44%;\n  left: 28px;\n  /* transform: translateY(-50%); */\n  transform: translateY(-44%);\n  font-size: 16px;\n  text-align: center;\n  color: #616161;\n  background-color: white;\n  pointer-events: none;\n  transition: all 0.2s ease-in-out;\n  padding: 0;\n  margin: 0;\n`;\n// ************ Select form ***********\n\nexport const SelectFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: 112px;\n  margin: 0;\n`;\nexport const SelectTitle = styled.label`\n  font-size: 20px;\n  text-align: center;\n  font-weight: 700;\n  color: #616161;\n  padding: 8px;\n`;\nexport const StyledSelect = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 316px;\n  height: 40px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #616161;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 8px;\n  margin: 0;\n  .option {\n    font-size: 16px;\n    color: #616161;\n    border-radius: 8px;\n    outline: #616161;\n  }\n  //\n`;\n// *********** Textarea form *************\nexport const AreaFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: 192px;\n  margin: 0;\n`;\nexport const AreatTitle = styled.label`\n  font-size: 20px;\n  text-align: center;\n  font-weight: 700;\n  color: #616161;\n  padding: 8px;\n`;\nexport const StyledTextarea = styled(Field)`\n  width: 340px;\n  height: 100px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #616161;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 8px;\n  margin: 0;\n`;\n// ************  Rating ********************\nexport const RatingFormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 240px;\n  height: 100px;\n  padding: 0;\n  margin: 0;\n`;\nexport const RatingTitle = styled.label`\n  font-size: 20px;\n  text-align: center;\n  font-weight: 700;\n  color: #616161;\n  padding: 8px;\n`;\nexport const StyledRating = styled(Field)`\n  width: 60px;\n  height: 28px;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  color: #616161;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 0;\n  margin: 0;\n`;\n// ************  Checkbox ********************\nexport const CheckboxFormWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: 60px;\n  margin: 0;\n  padding: 0;\n`;\nexport const CheckboxLabel = styled.label`\n  display: flex;\n  justify-content: ctnter;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  color: #616161;\n`;\nexport const StyledCheckbox = styled(Field)`\n  width: 20px;\n  height: 20px;\n  border-radius: 8px;\n  border: 2px solid #616161;\n  outline: #616161;\n  padding: 0;\n  margin: 0;\n`;\n// ********** Button- submit ***************\nexport const BtnForm = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 16px;\n  font-weight: 700;\n  background-color: #bdbdbd;\n  border-radius: 16px;\n  border: 1px solid #bdbdbd;\n  outline: #bdbdbd;\n  width: 400px;\n  height: 48px;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: #757575;\n  }\n`;\n// ********** Erorr ************************\n\nexport const ErrorText = styled.div`\n  display: flex;\n  justify-content: centr;\n  width: 300px;\n  font-size: 16px;\n  color: #ff1744;\n  padding: 0;\n  margin: 0;\n`;\n// ********************************\nexport const MyStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: white;\n  border-radius: 16px;\n  border: 2px solid #eeeeee;\n  width: 400px;\n  height: 112px;\n  margin: 0;\n  .form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    padding: 20px;\n  }\n  .input {\n    width: 300px;\n    height: 24px;\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .label {\n    font-size: 20px;\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 8px;\n  }\n  .select {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 316px;\n    height: 40px;\n    font-size: 16px;\n    font-weight: 500;\n    color: #616161;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 8px;\n    margin: 0;\n  }\n  .option {\n    font-size: 16px;\n    color: #616161;\n    border-radius: 8px;\n    outline: #616161;\n  }\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-size: 16px;\n    font-weight: 700;\n    background-color: #bdbdbd;\n    border-radius: 16px;\n    border: 1px solid #bdbdbd;\n    outline: #bdbdbd;\n    width: 400px;\n    height: 48px;\n    margin: 0;\n    padding: 0;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: #757575;\n    }\n  }\n`;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { ErrorText } from './Form.styled';\n\nexport default function FormError({ name }) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n}\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  AreaFormWrap,\n  AreatTitle,\n  AuthForm,\n  AuthTitle,\n  BtnForm,\n  CheckboxFormWrap,\n  CheckboxLabel,\n  InputBox,\n  Label,\n  RatingFormWrap,\n  RatingTitle,\n  SelectFormWrap,\n  SelectTitle,\n  StyledCheckbox,\n  StyledField,\n  StyledForm,\n  StyledRating,\n  StyledSelect,\n  StyledTextarea,\n  WrapFormUp,\n} from './Form.styled';\nimport FormError from './FormError';\n// import MySelect from './MySelect';\n\nconst jobType = [\n  'Design UI/UX',\n  'Fullstack',\n  'Project Manager',\n  'Data Analyst',\n  'Sysadmin',\n];\n\nconst validationSchema = Yup.object({\n  name: Yup.string().min(2, 'Too Short!').max(15, 'Too Long!').required(),\n  email: Yup.string().email('Invalid email').required(),\n  password: Yup.string().required(),\n  review: Yup.string().required(),\n  rating: Yup.number().required(),\n  agreement: Yup.boolean().required().default(false),\n  jobType: Yup.string().required('Please select a job type').oneOf(jobType),\n  date: Yup.date().default(() => new Date()),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  jobType: '',\n  review: '',\n  rating: '',\n  agreement: false,\n  date: new Date(),\n};\n\nexport default function FormikSignUp({ onRegistration }) {\n  const handleSubmit = (values, { resetForm }) => {\n    const email = values.email;\n    const password = values.password;\n    onRegistration(email, password);\n    console.log(values);\n    resetForm();\n  };\n  return (\n    <WrapFormUp>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm autoComplete=\"off\">\n          <AuthForm>\n            <AuthTitle>Autorization</AuthTitle>\n            <InputBox>\n              <StyledField name=\"name\" type=\"text\" placeholder=\"\" />\n              <Label htmlFor=\"name\">Name*</Label>\n            </InputBox>\n            <FormError name=\"name\" />\n            <InputBox>\n              <StyledField name=\"email\" type=\"text\" placeholder=\"\" />\n              <Label htmlFor=\"email\">Email*</Label>\n            </InputBox>\n            <FormError name=\"email\" />\n            <InputBox>\n              <StyledField name=\"password\" type=\"text\" placeholder=\"\" />\n              <Label htmlFor=\"password\">Password*</Label>\n            </InputBox>\n            <FormError name=\"password\" />\n          </AuthForm>\n          <SelectFormWrap>\n            <SelectTitle htmlFor=\"jobType\">Job Type</SelectTitle>\n            <StyledSelect name=\"jobType\" as=\"select\">\n              <option value=\"\" className=\"option\">\n                Select a job type\n              </option>\n              {jobType.map((type, idx) => (\n                <option value={type} key={idx} className=\"option\">\n                  {type}\n                </option>\n              ))}\n            </StyledSelect>\n            <FormError name=\"jobType\" />\n          </SelectFormWrap>\n          <AreaFormWrap>\n            <AreatTitle htmlFor=\"review\">About Me</AreatTitle>\n            <StyledTextarea name=\"review\" as=\"textarea\" placeholder=\"\" />\n            <FormError name=\"review\" />\n          </AreaFormWrap>\n          <RatingFormWrap>\n            <RatingTitle htmlFor=\"rating\">Experience</RatingTitle>\n            <StyledRating name=\"rating\" type=\"number\" min={0} max={10} />\n            <FormError name=\"rating\" />\n          </RatingFormWrap>\n          <CheckboxFormWrap>\n            <StyledCheckbox name=\"agreement\" type=\"checkbox\" />\n            <CheckboxLabel htmlFor=\"agreement\">\n              I accept the terms and conditions\n            </CheckboxLabel>\n            <FormError name=\"agreement\" />\n          </CheckboxFormWrap>\n          <BtnForm type=\"submit\">Submit</BtnForm>\n        </StyledForm>\n      </Formik>\n    </WrapFormUp>\n  );\n}\n\n// https://github.com/luxplanjay/react-41/blob/04-forms/src/components/ProductReviewForm/ProductReviewForm.jsx\n","import { useDispatch } from 'react-redux';\nimport { setUser } from 'store/slices/userSlice';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\n// import { Link, useLocation } from 'react-router-dom';\n// import {\n//   BtnFormFB,\n//   Input,\n//   InputBox,\n//   InputPass,\n//   Label,\n//   TitleFB,\n//   WrapFormFB,\n// } from 'components/RegistrationFB/Form.styled';\n\nimport FormikSignUp from './FormikSignUp';\n\nexport default function SignUp() {\n  const dispatch = useDispatch();\n  // const location = useLocation();\n  // const backLinkHref = location.state?.from ?? '/';\n  const auth = getAuth();\n\n  const handleSignUp = (email, password) => {\n    // evt.preventDefault();\n    // const email = evt.target.elements.email.value;\n    // const password = evt.target.elements.pass.value;\n    console.log(email, password);\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(userCredential => {\n        console.log(userCredential.user);\n        dispatch(\n          setUser({\n            email: userCredential.user.email,\n            id: userCredential.user.uid,\n            token: userCredential.user.accessToken,\n          })\n        );\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        console.log(errorCode);\n        const errorMessage = error.message;\n        console.error(errorMessage);\n      });\n  };\n\n  return (\n    <div>\n      <FormikSignUp onRegistration={handleSignUp} />\n    </div>\n  );\n}\n\n// <h1>Registeration Page</h1>\n// <TitleFB>Form</TitleFB>\n//  <WrapFormFB id=\"signup\" onSubmit={event => handleRegister(event)}>\n//    <InputBox>\n//      <input type=\"name\" name=\"name\" required=\"required\" className=\"input\" />\n//      <span className=\"span\">Name</span>\n//    </InputBox>\n\n//    <Input type=\"email\" name=\"email\" placeholder=\" \" required=\"required\" />\n//    <Label>Enter your name</Label>\n//    <InputPass\n//      type=\"password\"\n//      name=\"pass\"\n//      placeholder=\"Password\"\n//      required=\"required\"\n//    />\n//    <span>Password</span>\n//    <BtnFormFB type=\"submit\">Sign In</BtnFormFB>\n//    <Link to={backLinkHref}>Home</Link>\n//  </WrapFormFB>;\n"],"names":["FormikPageWrap","styled","WrapNavSign","WrapFormUp","StyledForm","Form","AuthForm","AuthTitle","InputBox","StyledField","Field","Label","SelectFormWrap","SelectTitle","StyledSelect","AreaFormWrap","AreatTitle","StyledTextarea","RatingFormWrap","RatingTitle","StyledRating","CheckboxFormWrap","CheckboxLabel","StyledCheckbox","BtnForm","ErrorText","MyStyled","FormError","name","render","message","jobType","validationSchema","Yup","min","max","required","email","password","review","rating","agreement","default","oneOf","date","Date","initialValues","FormikSignUp","onRegistration","onSubmit","values","resetForm","console","log","autoComplete","type","placeholder","htmlFor","as","value","className","map","idx","SignUp","dispatch","useDispatch","auth","getAuth","createUserWithEmailAndPassword","then","userCredential","user","setUser","id","uid","token","accessToken","catch","error","errorCode","code","errorMessage"],"sourceRoot":""}