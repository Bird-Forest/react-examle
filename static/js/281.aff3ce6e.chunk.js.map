{"version":3,"file":"static/js/281.aff3ce6e.chunk.js","mappings":"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","sources":["components/FormikFairbase/Form.styled.js","components/FormikFairbase/FormError.jsx","components/FormikFairbase/FormikSignUp.jsx","components/FormikFairbase/SignUp.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n// export const TitleFB = styled.h3`\n//   font-size: 24px;\n//   font-weight: 500;\n// `;\nexport const FormikPageWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 85vw;\n  height: 100vh;\n  /* overflow-y: scroll; */\n  margin: 0;\n  padding: 0;\n  /* background-color: #8c9eff; */\n`;\n\nexport const WrapNavSign = styled.nav`\n  /* position: fixed; */\n  top: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  background-color: #249fa3;\n  width: 100%;\n  height: 10vh;\n  gap: 20px;\n  margin: 0;\n  padding: 0;\n  .navigate {\n    font-family: 'Prompt', sans-serif;\n    font-size: 24px;\n    font-weight: 700;\n    margin: 0 0 20px 0;\n    color: #0e1841;\n    text-decoration: none;\n    transition: all 0.3s;\n    cursor: pointer;\n    &.active {\n      color: white;\n    }\n  }\n`;\n\nexport const WrapFormUp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  gap: 20px;\n  margin: 0 0 0 200px;\n`;\n\nexport const InputName = styled.input`\n  font-size: 16px;\n  outline: 2px solid red;\n`;\nexport const InputEmail = styled.input`\n  font-size: 16px;\n  outline: 2px solid red;\n`;\nexport const InputPass = styled.input`\n  font-size: 16px;\n  outline: 2px solid red;\n`;\nexport const BtnFormFB = styled.button`\n  background-color: white;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  /* gap: 20px; */\n  margin: 0;\n  padding: 24px;\n`;\nexport const AuthForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\nexport const InputBox = styled.div`\n  position: relative;\n  /* width: 300px;\n  height: 46px; */\n  padding: 0;\n  margin: 16px auto 4px auto;\n`;\nexport const StyledField = styled(Field)`\n  /* position: relative; */\n  width: 316px;\n  height: 24px;\n  text-align: left;\n  font-size: 16px;\n  border-radius: 8px;\n  border: 2px solid #2979ff;\n  outline: #2979ff;\n  padding: 8px;\n  margin: 0;\n\n  /* &::placeholder {\n    color: #2979ff;\n    background-color: white;\n    transform: translateY(0);\n    transition: transform 0.2s ease-in-out;\n  }\n  &:focus::placeholder {\n    transform: translateY(-20px);\n  } */\n\n  /* &:focus + label,\n  &:not(:placeholder-shown) + label {\n    transform: translateY(-40px);\n    font-size: 16px;\n    text-align: center;\n    color: #2979ff;\n  } */\n  &:focus + label,\n  &:not(:placeholder-shown) + label {\n    transform: translateY(-32px);\n    font-size: 16px;\n    text-align: center;\n    color: #2979ff;\n    outline: #2979ff;\n  }\n  /* &:not(:placeholder-shown) + label {\n    top: 50%;\n    left: 28px;\n    transform: translateY(-16px);\n  } */\n  /* &:not(:focus) + label {\n    top: 50%;\n    left: 28px;\n    transform: translateY(-16px);\n  } */\n`;\nexport const Label = styled.label`\n  position: absolute;\n  top: 44%;\n  left: 28px;\n  /* transform: translateY(-50%); */\n  transform: translateY(-44%);\n  font-size: 16px;\n  text-align: center;\n  color: #2979ff;\n  background-color: white;\n  pointer-events: none;\n  transition: all 0.2s ease-in-out;\n  padding: 0;\n  margin: 0;\n`;\n\n// export const StyledErrorMessage = styled(ErrorMessage)`\n//   /* Ваши стили */\n// `;\nexport const ErrorText = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 300px;\n  padding: 0;\n  font-size: 16px;\n  color: #ff1744;\n  margin: 0;\n`;\n","import React from 'react';\nimport { ErrorMessage } from 'formik';\nimport { ErrorText } from './Form.styled';\n\nexport default function FormError({ name }) {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n}\n","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  AuthForm,\n  InputBox,\n  Label,\n  StyledField,\n  StyledForm,\n  WrapFormUp,\n} from './Form.styled';\nimport FormError from './FormError';\n\nconst jobType = ['designer', 'development', 'product', 'other'];\n\nconst validationSchema = Yup.object({\n  name: Yup.string().min(2, 'Too Short!').max(15, 'Too Long!').required(),\n  email: Yup.string().email('Invalid email').required(),\n  password: Yup.string().required(),\n  review: Yup.string().required(),\n  rating: Yup.number().required(),\n  wouldRecommend: Yup.boolean().default(false),\n  jobType: Yup.string().oneOf(jobType).required('Required'),\n  date: Yup.date().default(() => new Date()),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  jobType: '',\n  review: '',\n  rating: '',\n  wouldRecommend: false,\n  date: new Date(),\n};\n\nexport default function FormikSignUp({ onRegistration }) {\n  const handleSubmit = (values, { resetForm }) => {\n    const email = values.email;\n    const password = values.password;\n    onRegistration(email, password);\n    console.log(values);\n    resetForm();\n  };\n  return (\n    <WrapFormUp>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm autoComplete=\"off\">\n          <AuthForm>\n            <InputBox>\n              <StyledField name=\"name\" type=\"text\" placeholder=\"\" />\n              <Label htmlFor=\"name\">Name*</Label>\n            </InputBox>\n            <FormError name=\"name\" />\n            <InputBox>\n              <StyledField name=\"email\" type=\"text\" placeholder=\"\" />\n              <Label htmlFor=\"email\">Email*</Label>\n            </InputBox>\n            <FormError name=\"email\" />\n            <InputBox>\n              <StyledField name=\"password\" type=\"text\" placeholder=\"\" />\n              <Label htmlFor=\"password\">Password*</Label>\n            </InputBox>\n            <FormError name=\"password\" />\n          </AuthForm>\n\n          <div>\n            <label htmlFor=\"product\">Job Type</label>\n            <div>\n              <Field name=\"jobType\" as=\"select\">\n                <option value=\"\">Select a job type</option>\n                {jobType.map((type, idx) => (\n                  <option value={type} key={idx}>\n                    {type}\n                  </option>\n                ))}\n              </Field>\n              <FormError name=\"product\" />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"review\">About Me</label>\n            <div>\n              <Field name=\"review\" as=\"textarea\" placeholder=\"About Me\" />\n              <FormError name=\"review\" />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"rating\">Experience</label>\n            <div>\n              <Field\n                name=\"rating\"\n                type=\"number\"\n                min={1}\n                max={10}\n                placeholder=\"experience\"\n              />\n              <FormError name=\"rating\" />\n            </div>\n          </div>\n          <div>\n            <div>\n              <label htmlFor=\"wouldRecommend\">\n                <Field name=\"wouldRecommend\" type=\"checkbox\" />\n                Would recommend\n              </label>\n            </div>\n          </div>\n          <button type=\"submit\">Submit</button>\n        </StyledForm>\n      </Formik>\n    </WrapFormUp>\n  );\n}\n\n// https://github.com/luxplanjay/react-41/blob/04-forms/src/components/ProductReviewForm/ProductReviewForm.jsx\n","import { useDispatch } from 'react-redux';\nimport { setUser } from 'store/slices/userSlice';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\n// import { Link, useLocation } from 'react-router-dom';\n// import {\n//   BtnFormFB,\n//   Input,\n//   InputBox,\n//   InputPass,\n//   Label,\n//   TitleFB,\n//   WrapFormFB,\n// } from 'components/RegistrationFB/Form.styled';\n\nimport FormikSignUp from './FormikSignUp';\n\nexport default function SignUp() {\n  const dispatch = useDispatch();\n  // const location = useLocation();\n  // const backLinkHref = location.state?.from ?? '/';\n  const auth = getAuth();\n\n  const handleSignUp = (email, password) => {\n    // evt.preventDefault();\n    // const email = evt.target.elements.email.value;\n    // const password = evt.target.elements.pass.value;\n    console.log(email, password);\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(userCredential => {\n        console.log(userCredential.user);\n        dispatch(\n          setUser({\n            email: userCredential.user.email,\n            id: userCredential.user.uid,\n            token: userCredential.user.accessToken,\n          })\n        );\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        console.log(errorCode);\n        const errorMessage = error.message;\n        console.error(errorMessage);\n      });\n  };\n\n  return (\n    <div>\n      <FormikSignUp onRegistration={handleSignUp} />\n    </div>\n  );\n}\n\n// <h1>Registeration Page</h1>\n// <TitleFB>Form</TitleFB>\n//  <WrapFormFB id=\"signup\" onSubmit={event => handleRegister(event)}>\n//    <InputBox>\n//      <input type=\"name\" name=\"name\" required=\"required\" className=\"input\" />\n//      <span className=\"span\">Name</span>\n//    </InputBox>\n\n//    <Input type=\"email\" name=\"email\" placeholder=\" \" required=\"required\" />\n//    <Label>Enter your name</Label>\n//    <InputPass\n//      type=\"password\"\n//      name=\"pass\"\n//      placeholder=\"Password\"\n//      required=\"required\"\n//    />\n//    <span>Password</span>\n//    <BtnFormFB type=\"submit\">Sign In</BtnFormFB>\n//    <Link to={backLinkHref}>Home</Link>\n//  </WrapFormFB>;\n"],"names":["FormikPageWrap","styled","WrapNavSign","WrapFormUp","StyledForm","Form","AuthForm","InputBox","StyledField","Field","Label","ErrorText","FormError","name","render","message","jobType","validationSchema","Yup","min","max","required","email","password","review","rating","wouldRecommend","default","oneOf","date","Date","initialValues","FormikSignUp","onRegistration","onSubmit","values","resetForm","console","log","autoComplete","type","placeholder","htmlFor","as","value","map","idx","SignUp","dispatch","useDispatch","auth","getAuth","createUserWithEmailAndPassword","then","userCredential","user","setUser","id","uid","token","accessToken","catch","error","errorCode","code","errorMessage"],"sourceRoot":""}